// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProfileView/> component should render an <ProfileView/> component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProfileView
    following={false}
    handleFollow={null}
    profile={Object {}}
    user={
      Object {
        "email": "gitaumoses4@gmail.com",
        "image": "https://avatars3.githubusercontent.com/u/25629064?s=460&v=4",
        "password": "Password1!",
        "username": "gitaumoses4",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <div
        className="profile-view"
      >
        <div
          className="row"
        >
          <div
            className="card"
          >
            <div
              className="card-image"
            >
              <img
                alt=""
                src="profile.jpg"
              />
              <span
                className="card-title"
              >
                <a
                  className="green-text"
                  href="/profiles/view/undefined"
                />
              </span>
            </div>
            <div
              className="card-content"
            >
              <div
                className="followButton"
              >
                <Connect(FollowUnfollow)
                  user={null}
                />
              </div>
              <br />
              <br />
            </div>
          </div>
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="row"
        >
          <div
            className="card"
          >
            <div
              className="card-image"
            >
              <img
                alt=""
                src="profile.jpg"
              />
              <span
                className="card-title"
              >
                <a
                  className="green-text"
                  href="/profiles/view/undefined"
                />
              </span>
            </div>
            <div
              className="card-content"
            >
              <div
                className="followButton"
              >
                <Connect(FollowUnfollow)
                  user={null}
                />
              </div>
              <br />
              <br />
            </div>
          </div>
        </div>,
        "className": "profile-view",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="card"
          >
            <div
              className="card-image"
            >
              <img
                alt=""
                src="profile.jpg"
              />
              <span
                className="card-title"
              >
                <a
                  className="green-text"
                  href="/profiles/view/undefined"
                />
              </span>
            </div>
            <div
              className="card-content"
            >
              <div
                className="followButton"
              >
                <Connect(FollowUnfollow)
                  user={null}
                />
              </div>
              <br />
              <br />
            </div>
          </div>,
          "className": "row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="card-image"
              >
                <img
                  alt=""
                  src="profile.jpg"
                />
                <span
                  className="card-title"
                >
                  <a
                    className="green-text"
                    href="/profiles/view/undefined"
                  />
                </span>
              </div>,
              <div
                className="card-content"
              >
                <div
                  className="followButton"
                >
                  <Connect(FollowUnfollow)
                    user={null}
                  />
                </div>
                <br />
                <br />
              </div>,
            ],
            "className": "card",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <img
                    alt=""
                    src="profile.jpg"
                  />,
                  <span
                    className="card-title"
                  >
                    <a
                      className="green-text"
                      href="/profiles/view/undefined"
                    />
                  </span>,
                ],
                "className": "card-image",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "alt": "",
                    "src": "profile.jpg",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <a
                      className="green-text"
                      href="/profiles/view/undefined"
                    />,
                    "className": "card-title",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": undefined,
                      "className": "green-text",
                      "href": "/profiles/view/undefined",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "a",
                  },
                  "type": "span",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="followButton"
                  >
                    <Connect(FollowUnfollow)
                      user={null}
                    />
                  </div>,
                  <br />,
                  <br />,
                ],
                "className": "card-content",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Connect(FollowUnfollow)
                      user={null}
                    />,
                    "className": "followButton",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "user": null,
                      "username": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="profile-view"
        >
          <div
            className="row"
          >
            <div
              className="card"
            >
              <div
                className="card-image"
              >
                <img
                  alt=""
                  src="profile.jpg"
                />
                <span
                  className="card-title"
                >
                  <a
                    className="green-text"
                    href="/profiles/view/undefined"
                  />
                </span>
              </div>
              <div
                className="card-content"
              >
                <div
                  className="followButton"
                >
                  <Connect(FollowUnfollow)
                    user={null}
                  />
                </div>
                <br />
                <br />
              </div>
            </div>
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row"
          >
            <div
              className="card"
            >
              <div
                className="card-image"
              >
                <img
                  alt=""
                  src="profile.jpg"
                />
                <span
                  className="card-title"
                >
                  <a
                    className="green-text"
                    href="/profiles/view/undefined"
                  />
                </span>
              </div>
              <div
                className="card-content"
              >
                <div
                  className="followButton"
                >
                  <Connect(FollowUnfollow)
                    user={null}
                  />
                </div>
                <br />
                <br />
              </div>
            </div>
          </div>,
          "className": "profile-view",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="card"
            >
              <div
                className="card-image"
              >
                <img
                  alt=""
                  src="profile.jpg"
                />
                <span
                  className="card-title"
                >
                  <a
                    className="green-text"
                    href="/profiles/view/undefined"
                  />
                </span>
              </div>
              <div
                className="card-content"
              >
                <div
                  className="followButton"
                >
                  <Connect(FollowUnfollow)
                    user={null}
                  />
                </div>
                <br />
                <br />
              </div>
            </div>,
            "className": "row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="card-image"
                >
                  <img
                    alt=""
                    src="profile.jpg"
                  />
                  <span
                    className="card-title"
                  >
                    <a
                      className="green-text"
                      href="/profiles/view/undefined"
                    />
                  </span>
                </div>,
                <div
                  className="card-content"
                >
                  <div
                    className="followButton"
                  >
                    <Connect(FollowUnfollow)
                      user={null}
                    />
                  </div>
                  <br />
                  <br />
                </div>,
              ],
              "className": "card",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <img
                      alt=""
                      src="profile.jpg"
                    />,
                    <span
                      className="card-title"
                    >
                      <a
                        className="green-text"
                        href="/profiles/view/undefined"
                      />
                    </span>,
                  ],
                  "className": "card-image",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "alt": "",
                      "src": "profile.jpg",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "img",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <a
                        className="green-text"
                        href="/profiles/view/undefined"
                      />,
                      "className": "card-title",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": undefined,
                        "className": "green-text",
                        "href": "/profiles/view/undefined",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "a",
                    },
                    "type": "span",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="followButton"
                    >
                      <Connect(FollowUnfollow)
                        user={null}
                      />
                    </div>,
                    <br />,
                    <br />,
                  ],
                  "className": "card-content",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Connect(FollowUnfollow)
                        user={null}
                      />,
                      "className": "followButton",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "user": null,
                        "username": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": "br",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": "br",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
