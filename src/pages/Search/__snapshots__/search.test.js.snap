// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Search container renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search
    fetchArticles={[MockFunction]}
    filtersChanged={[MockFunction]}
    onFilterChanged={[MockFunction]}
    onSearch={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(NavBar) />,
        <div
          className="container"
        >
          <div
            className="nav-wrapper"
          >
            <div
              className="article-search"
            >
              <div
                className="row"
              >
                <div
                  className="input-field col s10"
                >
                  <input
                    name="search"
                    onChange={[Function]}
                    placeholder="Search here"
                    required={true}
                    type="search"
                    value=""
                  />
                  <label
                    className="label-icon"
                    htmlFor="search"
                  >
                    <i
                      className="material-icons"
                    >
                      search
                    </i>
                  </label>
                </div>
                <div
                  className="col s2"
                >
                  <a
                    className="btn white-text dropdown-trigger"
                    href="#filter-dropdown"
                    id="filter-dropdown-trigger"
                  >
                    <i
                      className="material-icons left"
                    >
                      filter_list
                    </i>
                    Filter
                  </a>
                </div>
              </div>
            </div>
            <Connect(FilterDropDown)
              filtersChanged={[Function]}
            />
          </div>
        </div>,
        <div
          className="container"
        >
          <div
            className="row"
          >
            <div
              className="col l8 s12"
            >
              <Connect(ArticleListing)
                bordered={true}
                emptyMessage="We did not find any results"
                initialList={5}
                listName="search"
                url="articles/search_filter"
              />
            </div>
            <div
              className="col l3 s12"
            >
              
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="nav-wrapper"
          >
            <div
              className="article-search"
            >
              <div
                className="row"
              >
                <div
                  className="input-field col s10"
                >
                  <input
                    name="search"
                    onChange={[Function]}
                    placeholder="Search here"
                    required={true}
                    type="search"
                    value=""
                  />
                  <label
                    className="label-icon"
                    htmlFor="search"
                  >
                    <i
                      className="material-icons"
                    >
                      search
                    </i>
                  </label>
                </div>
                <div
                  className="col s2"
                >
                  <a
                    className="btn white-text dropdown-trigger"
                    href="#filter-dropdown"
                    id="filter-dropdown-trigger"
                  >
                    <i
                      className="material-icons left"
                    >
                      filter_list
                    </i>
                    Filter
                  </a>
                </div>
              </div>
            </div>
            <Connect(FilterDropDown)
              filtersChanged={[Function]}
            />
          </div>,
          "className": "container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="article-search"
              >
                <div
                  className="row"
                >
                  <div
                    className="input-field col s10"
                  >
                    <input
                      name="search"
                      onChange={[Function]}
                      placeholder="Search here"
                      required={true}
                      type="search"
                      value=""
                    />
                    <label
                      className="label-icon"
                      htmlFor="search"
                    >
                      <i
                        className="material-icons"
                      >
                        search
                      </i>
                    </label>
                  </div>
                  <div
                    className="col s2"
                  >
                    <a
                      className="btn white-text dropdown-trigger"
                      href="#filter-dropdown"
                      id="filter-dropdown-trigger"
                    >
                      <i
                        className="material-icons left"
                      >
                        filter_list
                      </i>
                      Filter
                    </a>
                  </div>
                </div>
              </div>,
              <Connect(FilterDropDown)
                filtersChanged={[Function]}
              />,
            ],
            "className": "nav-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="row"
                >
                  <div
                    className="input-field col s10"
                  >
                    <input
                      name="search"
                      onChange={[Function]}
                      placeholder="Search here"
                      required={true}
                      type="search"
                      value=""
                    />
                    <label
                      className="label-icon"
                      htmlFor="search"
                    >
                      <i
                        className="material-icons"
                      >
                        search
                      </i>
                    </label>
                  </div>
                  <div
                    className="col s2"
                  >
                    <a
                      className="btn white-text dropdown-trigger"
                      href="#filter-dropdown"
                      id="filter-dropdown-trigger"
                    >
                      <i
                        className="material-icons left"
                      >
                        filter_list
                      </i>
                      Filter
                    </a>
                  </div>
                </div>,
                "className": "article-search",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="input-field col s10"
                    >
                      <input
                        name="search"
                        onChange={[Function]}
                        placeholder="Search here"
                        required={true}
                        type="search"
                        value=""
                      />
                      <label
                        className="label-icon"
                        htmlFor="search"
                      >
                        <i
                          className="material-icons"
                        >
                          search
                        </i>
                      </label>
                    </div>,
                    <div
                      className="col s2"
                    >
                      <a
                        className="btn white-text dropdown-trigger"
                        href="#filter-dropdown"
                        id="filter-dropdown-trigger"
                      >
                        <i
                          className="material-icons left"
                        >
                          filter_list
                        </i>
                        Filter
                      </a>
                    </div>,
                  ],
                  "className": "row",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <input
                          name="search"
                          onChange={[Function]}
                          placeholder="Search here"
                          required={true}
                          type="search"
                          value=""
                        />,
                        <label
                          className="label-icon"
                          htmlFor="search"
                        >
                          <i
                            className="material-icons"
                          >
                            search
                          </i>
                        </label>,
                      ],
                      "className": "input-field col s10",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "name": "search",
                          "onChange": [Function],
                          "placeholder": "Search here",
                          "required": true,
                          "type": "search",
                          "value": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "input",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <i
                            className="material-icons"
                          >
                            search
                          </i>,
                          "className": "label-icon",
                          "htmlFor": "search",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "search",
                            "className": "material-icons",
                          },
                          "ref": null,
                          "rendered": "search",
                          "type": "i",
                        },
                        "type": "label",
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <a
                        className="btn white-text dropdown-trigger"
                        href="#filter-dropdown"
                        id="filter-dropdown-trigger"
                      >
                        <i
                          className="material-icons left"
                        >
                          filter_list
                        </i>
                        Filter
                      </a>,
                      "className": "col s2",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <i
                            className="material-icons left"
                          >
                            filter_list
                          </i>,
                          "Filter",
                        ],
                        "className": "btn white-text dropdown-trigger",
                        "href": "#filter-dropdown",
                        "id": "filter-dropdown-trigger",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "filter_list",
                            "className": "material-icons left",
                          },
                          "ref": null,
                          "rendered": "filter_list",
                          "type": "i",
                        },
                        "Filter",
                      ],
                      "type": "a",
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "filtersChanged": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row"
          >
            <div
              className="col l8 s12"
            >
              <Connect(ArticleListing)
                bordered={true}
                emptyMessage="We did not find any results"
                initialList={5}
                listName="search"
                url="articles/search_filter"
              />
            </div>
            <div
              className="col l3 s12"
            >
              
            </div>
          </div>,
          "className": "container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="col l8 s12"
              >
                <Connect(ArticleListing)
                  bordered={true}
                  emptyMessage="We did not find any results"
                  initialList={5}
                  listName="search"
                  url="articles/search_filter"
                />
              </div>,
              <div
                className="col l3 s12"
              >
                
              </div>,
            ],
            "className": "row",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Connect(ArticleListing)
                  bordered={true}
                  emptyMessage="We did not find any results"
                  initialList={5}
                  listName="search"
                  url="articles/search_filter"
                />,
                "className": "col l8 s12",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bordered": true,
                  "emptyMessage": "We did not find any results",
                  "initialList": 5,
                  "listName": "search",
                  "url": "articles/search_filter",
                },
                "ref": [Function],
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "",
                "className": "col l3 s12",
              },
              "ref": null,
              "rendered": "",
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(NavBar) />,
          <div
            className="container"
          >
            <div
              className="nav-wrapper"
            >
              <div
                className="article-search"
              >
                <div
                  className="row"
                >
                  <div
                    className="input-field col s10"
                  >
                    <input
                      name="search"
                      onChange={[Function]}
                      placeholder="Search here"
                      required={true}
                      type="search"
                      value=""
                    />
                    <label
                      className="label-icon"
                      htmlFor="search"
                    >
                      <i
                        className="material-icons"
                      >
                        search
                      </i>
                    </label>
                  </div>
                  <div
                    className="col s2"
                  >
                    <a
                      className="btn white-text dropdown-trigger"
                      href="#filter-dropdown"
                      id="filter-dropdown-trigger"
                    >
                      <i
                        className="material-icons left"
                      >
                        filter_list
                      </i>
                      Filter
                    </a>
                  </div>
                </div>
              </div>
              <Connect(FilterDropDown)
                filtersChanged={[Function]}
              />
            </div>
          </div>,
          <div
            className="container"
          >
            <div
              className="row"
            >
              <div
                className="col l8 s12"
              >
                <Connect(ArticleListing)
                  bordered={true}
                  emptyMessage="We did not find any results"
                  initialList={5}
                  listName="search"
                  url="articles/search_filter"
                />
              </div>
              <div
                className="col l3 s12"
              >
                
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="nav-wrapper"
            >
              <div
                className="article-search"
              >
                <div
                  className="row"
                >
                  <div
                    className="input-field col s10"
                  >
                    <input
                      name="search"
                      onChange={[Function]}
                      placeholder="Search here"
                      required={true}
                      type="search"
                      value=""
                    />
                    <label
                      className="label-icon"
                      htmlFor="search"
                    >
                      <i
                        className="material-icons"
                      >
                        search
                      </i>
                    </label>
                  </div>
                  <div
                    className="col s2"
                  >
                    <a
                      className="btn white-text dropdown-trigger"
                      href="#filter-dropdown"
                      id="filter-dropdown-trigger"
                    >
                      <i
                        className="material-icons left"
                      >
                        filter_list
                      </i>
                      Filter
                    </a>
                  </div>
                </div>
              </div>
              <Connect(FilterDropDown)
                filtersChanged={[Function]}
              />
            </div>,
            "className": "container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="article-search"
                >
                  <div
                    className="row"
                  >
                    <div
                      className="input-field col s10"
                    >
                      <input
                        name="search"
                        onChange={[Function]}
                        placeholder="Search here"
                        required={true}
                        type="search"
                        value=""
                      />
                      <label
                        className="label-icon"
                        htmlFor="search"
                      >
                        <i
                          className="material-icons"
                        >
                          search
                        </i>
                      </label>
                    </div>
                    <div
                      className="col s2"
                    >
                      <a
                        className="btn white-text dropdown-trigger"
                        href="#filter-dropdown"
                        id="filter-dropdown-trigger"
                      >
                        <i
                          className="material-icons left"
                        >
                          filter_list
                        </i>
                        Filter
                      </a>
                    </div>
                  </div>
                </div>,
                <Connect(FilterDropDown)
                  filtersChanged={[Function]}
                />,
              ],
              "className": "nav-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="row"
                  >
                    <div
                      className="input-field col s10"
                    >
                      <input
                        name="search"
                        onChange={[Function]}
                        placeholder="Search here"
                        required={true}
                        type="search"
                        value=""
                      />
                      <label
                        className="label-icon"
                        htmlFor="search"
                      >
                        <i
                          className="material-icons"
                        >
                          search
                        </i>
                      </label>
                    </div>
                    <div
                      className="col s2"
                    >
                      <a
                        className="btn white-text dropdown-trigger"
                        href="#filter-dropdown"
                        id="filter-dropdown-trigger"
                      >
                        <i
                          className="material-icons left"
                        >
                          filter_list
                        </i>
                        Filter
                      </a>
                    </div>
                  </div>,
                  "className": "article-search",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="input-field col s10"
                      >
                        <input
                          name="search"
                          onChange={[Function]}
                          placeholder="Search here"
                          required={true}
                          type="search"
                          value=""
                        />
                        <label
                          className="label-icon"
                          htmlFor="search"
                        >
                          <i
                            className="material-icons"
                          >
                            search
                          </i>
                        </label>
                      </div>,
                      <div
                        className="col s2"
                      >
                        <a
                          className="btn white-text dropdown-trigger"
                          href="#filter-dropdown"
                          id="filter-dropdown-trigger"
                        >
                          <i
                            className="material-icons left"
                          >
                            filter_list
                          </i>
                          Filter
                        </a>
                      </div>,
                    ],
                    "className": "row",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <input
                            name="search"
                            onChange={[Function]}
                            placeholder="Search here"
                            required={true}
                            type="search"
                            value=""
                          />,
                          <label
                            className="label-icon"
                            htmlFor="search"
                          >
                            <i
                              className="material-icons"
                            >
                              search
                            </i>
                          </label>,
                        ],
                        "className": "input-field col s10",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "name": "search",
                            "onChange": [Function],
                            "placeholder": "Search here",
                            "required": true,
                            "type": "search",
                            "value": "",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": "input",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <i
                              className="material-icons"
                            >
                              search
                            </i>,
                            "className": "label-icon",
                            "htmlFor": "search",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "search",
                              "className": "material-icons",
                            },
                            "ref": null,
                            "rendered": "search",
                            "type": "i",
                          },
                          "type": "label",
                        },
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <a
                          className="btn white-text dropdown-trigger"
                          href="#filter-dropdown"
                          id="filter-dropdown-trigger"
                        >
                          <i
                            className="material-icons left"
                          >
                            filter_list
                          </i>
                          Filter
                        </a>,
                        "className": "col s2",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <i
                              className="material-icons left"
                            >
                              filter_list
                            </i>,
                            "Filter",
                          ],
                          "className": "btn white-text dropdown-trigger",
                          "href": "#filter-dropdown",
                          "id": "filter-dropdown-trigger",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "filter_list",
                              "className": "material-icons left",
                            },
                            "ref": null,
                            "rendered": "filter_list",
                            "type": "i",
                          },
                          "Filter",
                        ],
                        "type": "a",
                      },
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "filtersChanged": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row"
            >
              <div
                className="col l8 s12"
              >
                <Connect(ArticleListing)
                  bordered={true}
                  emptyMessage="We did not find any results"
                  initialList={5}
                  listName="search"
                  url="articles/search_filter"
                />
              </div>
              <div
                className="col l3 s12"
              >
                
              </div>
            </div>,
            "className": "container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="col l8 s12"
                >
                  <Connect(ArticleListing)
                    bordered={true}
                    emptyMessage="We did not find any results"
                    initialList={5}
                    listName="search"
                    url="articles/search_filter"
                  />
                </div>,
                <div
                  className="col l3 s12"
                >
                  
                </div>,
              ],
              "className": "row",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Connect(ArticleListing)
                    bordered={true}
                    emptyMessage="We did not find any results"
                    initialList={5}
                    listName="search"
                    url="articles/search_filter"
                  />,
                  "className": "col l8 s12",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bordered": true,
                    "emptyMessage": "We did not find any results",
                    "initialList": 5,
                    "listName": "search",
                    "url": "articles/search_filter",
                  },
                  "ref": [Function],
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "",
                  "className": "col l3 s12",
                },
                "ref": null,
                "rendered": "",
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
